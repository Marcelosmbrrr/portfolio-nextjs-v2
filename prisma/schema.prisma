datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

generator client {
  provider = "prisma-client-js"
}

// NEXTAUTH
// https://authjs.dev/getting-started/adapters/prisma

model User {
  id       String   @id @default(cuid())
  name     String
  username String   @unique
  email    String   @unique
  password String
  whatsapp String   @unique
  Account  Account?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String  @unique
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

// RESOURCES

model Tech {
  id          Int      @id @default(autoincrement())
  cuid        String   @default(cuid())
  name        String   @unique
  description String
  icon        String[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("techs")
}

model Project {
  id           Int      @id @default(autoincrement())
  cuid         String   @default(cuid())
  name         String   @unique
  published    Boolean
  stage        String
  technologies String
  description  String
  image        String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("projects")
}

model Post {
  id          Int      @id @default(autoincrement())
  cuid        String   @default(cuid())
  name        String   @unique
  tags        String
  description String
  content     String
  image       String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("posts")
}
